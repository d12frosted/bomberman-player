--------------------------------------------------------------------------------

module Data.Monoid.Bool where

--------------------------------------------------------------------------------

import           Data.Coerce (coerce)
import           Data.Monoid

--------------------------------------------------------------------------------

infixr 3 .&
(.&) :: (a -> Bool) -> (a -> Bool) -> a -> Bool
p1 .& p2 = getAll <$> (coerce <$> p1) <> (coerce <$> p2)

--------------------------------------------------------------------------------

infixr 2 .|
(.|) :: (a -> Bool) -> (a -> Bool) -> a -> Bool
p1 .| p2 = getAny <$> (coerce <$> p1) <> (coerce <$> p2)

--------------------------------------------------------------------------------
